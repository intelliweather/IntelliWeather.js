{"name":"IntelliWeather.js","tagline":"A jQuery plugin for building robust weather pages using the IntelliWeather Image API.","body":"\r\nintelliweather.js\r\n=================\r\n\r\nCreated by [IntelliWeather], intelliweather.js is a flexible JavaScript library\r\nthat provides a strong foundation for building robust satellite radar web pages, \r\nby talking to the IntelliWeather Image API.\r\n\r\n<!-- section links -->\r\n\r\n[IntelliWeather]: http://www.intelliweather.com/\r\n\r\nUsage\r\n-----\r\n\r\nThe plugin needs a container to build it's UI within.\r\n\r\n```html\r\n<div class=\"iw\"></div>\r\n```\r\n\r\nThen at the bottom in a script element, use jQuery to find your container\r\nelement and then call intelliWeather on it, passing in a descriptor. View\r\n[test/fixtures/descriptors.js][descriptor-examples] for example descriptors.\r\n\r\n```javascript\r\n$('.iw').intelliWeather({\r\n  local: {\r\n    channel: 1\r\n  }\r\n});\r\n```\r\n\r\n[descriptor-examples]: https://github.com/intelliweather/IntelliWeather.js/blob/master/test/fixtures/descriptors.js\r\n\r\nYou can also download a descriptor using an id for the descriptor.\r\n\r\n```javascript\r\n$('.iw').intelliWeather({\r\n  remote: 'https://gfx1.intelliweather.net/api/descriptors/{descriptor-id}'\r\n});\r\n```\r\n\r\nVersioning\r\n----------\r\n\r\nFor transparency and insight into our release cycle, releases will be numbered\r\nwith the following format:\r\n\r\n`<major>.<minor>.<patch>`\r\n\r\nAnd constructed with the following guidelines:\r\n\r\n* Breaking backwards compatibility bumps the major\r\n* New additions without breaking backwards compatibility bumps the minor\r\n* Bug fixes and misc changes bump the patch\r\n\r\nFor more information on semantic versioning, please visit http://semver.org/.\r\n\r\nDevelopers\r\n-----------\r\n\r\nThe dev environment uses the [node.js] platform. In order to build and test\r\nintelliweather.js, you'll need to install its dev dependencies by running\r\n(`$ npm install`). Below is an overview of the available Gulp tasks that'll be\r\nuseful in development.\r\n\r\n* `gulp build`\r\n - Builds *intelliweather.js* from source.\r\n* `gulp clean`\r\n - Cleans the build artifacts.\r\n* `gulp lint`\r\n - Runs source and test files through JSHint.\r\n* `gulp watch`\r\n - Rebuilds *intelliweather.js* whenever a source file is modified.\r\n* `gulp server`\r\n - Serves files from the root of intelliweather.js on localhost:3000. Useful for\r\n   using *test/index.html* for debugging/testing.\r\n* `gulp dev`\r\n - Runs `gulp watch` and `gulp server` in parallel.\r\n\r\n<!-- section links -->\r\n\r\n[node.js]: http://nodejs.org/\r\n[gulp]: https://github.com/gulpjs/gulp/\r\n\r\nTesting\r\n-------\r\n\r\nThe only tests available is an integration testing page, run (`$ gulp dev`) and \r\na browser window will launch. After, it launches, navigate to the \r\n[integration test page][integration].\r\n\r\n<!-- section links -->\r\n\r\n[integration]: https://localhost:3000/test/index.html\r\n\r\nLicense\r\n-------\r\n\r\nCopyright 2014 IntelliWeather, Inc.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}